- hosts: docker_host
  vars_files:
    - docker_ssh_vars.yml
  tasks:
    - file:
        state: directory
        path: "{{ dvd_dir }}"

    - mount:
        src: "/dev/cdrom"
        path: "{{ dvd_dir }}"
        state: mounted
        fstype: iso9660

    - yum_repository:
        baseurl: "{{ dvd_dir }}/AppStream"
        name: "dvd1"
        description: "AppStream dvd"
        gpgcheck: no

    - yum_repository:
        baseurl: "{{ dvd_dir }}/BaseOS"
        name: "dvd2"
        description: "BaseOS dvd"
        gpgcheck: no

    - yum_repository:
        baseurl: "https://download.docker.com/linux/centos/7/x86_64/stable/"
        name: "docker-ce"
        description: "Docker-ce repo"
        gpgcheck: no

    - package:
        name: "python3"
        state: present

    - package:
        name: "docker-ce-18.09.1-3.el7.x86_64"
        state: present

    - pip:
        name: "docker-py"

    - name: Put SELinux in permissive mode
      ansible.posix.selinux:
        policy: targeted
        state: permissive

    - name: "Disable firewall... "
      service:
        name: "firewalld"
        state: stopped

    - service:
        name: "docker"
        state: started
        enabled: yes

    - docker_container:
        name: "webserveros"
        image: "aditi99/centos-ssh:v1"
        state: started
        detach: yes
        tty: no
        exposed_ports:
        -  80
        -  22
        ports: 
        - "{{ apache_port }}:80"
        - "{{ ssh_port }}:22"
      register: info

        
- hosts: localhost
  tasks:
  - debug: 
     var: info.container.NetworkSettings.IPAddress
  - name: "Updating inventory..."
    blockinfile:
      path: "/root/inventory.txt"
      block: |
        [docker_container]
        {{info['container']['NetworkSettings']['IPAddress'] }} ansible_host=192.168.43.159 ansible_user=root ansible_ssh_pass=redhat ansible_connection=ssh ansible_port={{ ssh_port }}
      marker: ""

- hosts: docker_container
  tasks:
  - name: "Installing package httpd"
      package:
        name: "httpd"
        state: present

  - name: "Creating webpage"
      copy:
        dest: "/var/www/html/index.html"
        content: "Welcome to my Docker Container!!"

  - name: "Starting services"
    service:
      name: " httpd"
      state: started
      enabled: yes


